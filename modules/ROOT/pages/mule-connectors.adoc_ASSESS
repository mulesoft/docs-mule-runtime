= Anypoint Connectors
ifndef::env-site,env-github[]
include::_attributes.adoc[]
endif::[]
:keywords: studio, connectors, elements, architecture

image::connectors.png[]

Anypoint Connectors receive or send messages between Mule and one or more external sources, such as files, databases, or Web services. Connectors can act as message sources by working as inbound endpoints, they can act as a message processor that performs an operation in the middle of a flow, or they can be at the end of a flow and act as the recipient of the final payload data.

Connectors in Mule are either *endpoint-based* or *operation-based*:

* Endpoint-based connectors follow either a one-way or request-response exchange pattern and are often (but not always) named and based around a standard data communication protocol, such as FTP and SMTP.
* Operation-based connectors follow an information exchange pattern based on the operation that you select and are often (but not always) named and based around one or more specific third-party APIs.

== Endpoint-Based Connectors

Endpoint-based connectors are configured as either inbound or outbound endpoints in a flow. Inbound endpoints serve as a message source for a flow. Outbound endpoints can occur mid-flow or at the end of flows, and send information to external systems.

image::endpointbased.png[]

== Operation-Based Connectors

When you add an operation-based connector to your flow, you immediately define a specific operation for that connector to perform.

image::operationbased.png[]

The XML element of the connector differs according to the operation that you select, taking the form `<connectorName>:<operation>`. For example, `sfdc:query` or `sfdc:upsert-bulk`. The remaining configuration attributes or child elements are determined by the operation that you select.

== Global Connector Configuration

Some connectors require that connection information such as username, password, and security tokens be configured in a global element rather than at the level of the message processor within the flow. Many connectors of the same type in an application can reference the connector configuration at the global level. For operation-based connectors, the global connector configuration is mandatory, but for most endpoint-based connectors it is optional.

Note that the global element that you configure in Anypoint Studio is called a Connector Configuration. The corresponding XML tags are *<connectorName>:config* for operation-based connectors and *<connectorName>:connector* for endpoint-based connectors. See the examples below.

== HTTP Connector Example

This example shows how an HTTP connector, which is operation-based. You can  configure this connector as both a listener for receiving inbound requests or as a request connector for making outbound requests. The HTTP connector  requires a global connector configuration that specifies its connection attributes.

[source,xml,linenums]
----
include::{examplesdir}/mule-connectors_1.xml[]
----


== JMS Connector Example

This example shows an endpoint-based JMS connector for the JMS transport. You can  configure this connector as an inbound endpoint in a flow. The JMS endpoint includes a mandatory reference to a global connector configuration which contains the connection parameters.

[source,xml,linenums]
----
include::{examplesdir}/mule-connectors_2.xml[]
----


== Salesforce Connector Example

This example shows a Salesforce connector, which is operation-based. You can  configure this connector to create a new contact in Salesforce based on the payload pulled from a file endpoint. The Salesforce connector includes a mandatory reference to a global connector configuration that contains the connection parameters.

[source,xml,linenums]
----
include::{examplesdir}/mule-connectors_3.xml[]
----

== See Also

* *NEXT STEP*: Read on about xref:about-components.adoc[components].
* Skip ahead to understand the structure of a xref:mule-concepts.adoc#mule-event[Mule Event object].